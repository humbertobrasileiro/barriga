{
    "sourceFile": "test/routes/balance.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1664803635123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1664803855460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   test('Should add values of input', async () => {\r\n     await request(app).post(ROUTE_TRANSACTION)\r\n       .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should add values of input',\r\n         date: new Date(),\r\n         ammount: 100,\r\n         type: 'I',\r\n         acc_id: 10100,\r\n"
                },
                {
                    "date": 1664804180591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,21 +50,22 @@\n   });\r\n   \r\n   test('Should subtract output values', () => {\r\n     return request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should subtract output values',\r\n         date: new Date(),\r\n         ammount: 200,\r\n         type: 'O',\r\n         acc_id: 10100,\r\n         status: true\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('subtract', res.body[0].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(1);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664804379912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,21 +74,22 @@\n   });\r\n \r\n   test('Should not consider pending transactions', () => {\r\n     return request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should not consider pending transactions',\r\n         date: new Date(),\r\n         ammount: 200,\r\n         type: 'O',\r\n         acc_id: 10100,\r\n         status: false\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('consider', res.body[0].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(1);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664804623044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,21 +98,22 @@\n   });\r\n   \r\n   test('Should not mix balances from different accounts', () => {\r\n     return request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should not mix balances',\r\n         date: new Date(),\r\n         ammount: 50,\r\n         type: 'I',\r\n         acc_id: 10101,\r\n         status: true\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664804759207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,21 +124,22 @@\n   });\r\n   \r\n   test('Should not mix accounts from another users', () => {\r\n     return request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should not mix accounts from another users',\r\n         date: new Date(),\r\n         ammount: 200,\r\n         type: 'O',\r\n         acc_id: 10102,\r\n         status: true\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664804937789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,19 +150,23 @@\n   });\r\n   \r\n   test('Should consider old transaction', async () => {\r\n     await request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should consider old transaction',\r\n         date: moment().subtract({days: 5}),\r\n         ammount: 250,\r\n         type: 'I',\r\n         acc_id: 10100,\r\n         status: true\r\n-      });\r\n+      })\r\n+      .set('authorization', `bearer ${TOKEN}`);\r\n+\r\n     const res = await request(app).get(MAIN_ROUTE)\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n+\r\n+    console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n+\r\n     expect(res.status).toBe(200);\r\n     expect(res.body).toHaveLength(2);\r\n     expect(res.body[0].id).toBe(10100);\r\n     expect(res.body[0].sum).toBe('150.00');\r\n"
                },
                {
                    "date": 1664804998035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n \r\n     const res = await request(app).get(MAIN_ROUTE)\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n-    console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n+    console.log('Should consider old transaction', res.body[0].sum, res.body[1].sum);\r\n \r\n     expect(res.status).toBe(200);\r\n     expect(res.body).toHaveLength(2);\r\n     expect(res.body[0].id).toBe(10100);\r\n"
                },
                {
                    "date": 1664805158929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,21 +175,22 @@\n   });\r\n   \r\n   test('Should not consider future transaction', () => {\r\n     return request(app).post(ROUTE_TRANSACTION)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should not consider future transaction',\r\n         date: moment().add({days: 5}),\r\n         ammount: 250,\r\n         type: 'I',\r\n         acc_id: 10100,\r\n         status: true\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('Should not consider future transaction', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('150.00');\r\n"
                },
                {
                    "date": 1664805385068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,20 +201,21 @@\n   });\r\n   \r\n   test('Should consider transfers', () => {\r\n     return request(app).post(ROUTE_TRANSFER)\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n       .send({\r\n-        description: '1',\r\n+        description: 'Should consider transfers',\r\n         date: new Date(),\r\n         ammount: 250,\r\n         acc_ori_id: 10100,\r\n         acc_des_id: 10101\r\n       })\r\n+      .set('authorization', `bearer ${TOKEN}`)\r\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n+            console.log('Should not consider future transaction', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664805400986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -213,9 +213,9 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('Should not consider future transaction', res.body[0].sum, res.body[1].sum);\r\n+            console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664812232172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,5 +224,9 @@\n         });\r\n       });\r\n   });\r\n \r\n+  test('', () => {\r\n+    \r\n+  })\r\n+\r\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1664812537778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,23 @@\n \r\n const MAIN_ROUTE = '/v1/balance';\r\n const ROUTE_TRANSACTION = '/v1/transactions';\r\n const ROUTE_TRANSFER = '/v1/transfers';\r\n+\r\n const logUser = {\r\n   id: 10100,\r\n   name: 'User #3',\r\n   mail: 'user3@mail.com'\r\n };\r\n const TOKEN = jwt.encode(logUser, 'Segredo!');\r\n \r\n+const logUser2 = {\r\n+  id: 10102,\r\n+  name: 'User #5',\r\n+  mail: 'user5@mail.com'\r\n+};\r\n+const TOKEN_GERAL = jwt.encode(logUser2, 'Segredo!');\r\n+\r\n beforeAll(async () => {\r\n   await app.db.seed.run();\r\n });\r\n \r\n"
                },
                {
                    "date": 1664812874256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,9 +232,19 @@\n         });\r\n       });\r\n   });\r\n \r\n-  test('', () => {\r\n-    \r\n-  })\r\n+  test('should calculate the balance of the accounts of users', () => {\r\n+    return request(app).get(MAIN_ROUTE)\r\n\\ No newline at end of file\n+      .set('authorization', `bearer ${TOKEN_GERAL}`)\r\n+      .then(res => {\r\n+        console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n+        expect(res.status).toBe(200);\r\n+        expect(res.body).toHaveLength(2);\r\n+        expect(res.body[0].id).toBe(10104);\r\n+        expect(res.body[0].sum).toBe('162.00');\r\n+        expect(res.body[1].id).toBe(10105);\r\n+        expect(res.body[1].sum).toBe('-248.00');\r\n+    });\r\n+  });\r\n \r\n-})\n+});\n\\ No newline at end of file\n"
                },
                {
                    "date": 1664813784518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n             expect(res.body[1].id).toBe(10101);\r\n-            expect(res.body[1].sum).toBe('200.00');\r\n+            expect(res.body[1].sum).toBe('300.00');\r\n         });\r\n       });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1664815377251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n             expect(res.body[1].id).toBe(10101);\r\n-            expect(res.body[1].sum).toBe('300.00');\r\n+            expect(res.body[1].sum).toBe('200.00');\r\n         });\r\n       });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1664817869560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,9 +225,9 @@\n             console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n-            expect(res.body[0].sum).toBe('-100.00');\r\n+            expect(res.body[0].sum).toBe('150.00');\r\n             expect(res.body[1].id).toBe(10101);\r\n             expect(res.body[1].sum).toBe('200.00');\r\n         });\r\n       });\r\n"
                },
                {
                    "date": 1664817890202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,9 +227,9 @@\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('150.00');\r\n             expect(res.body[1].id).toBe(10101);\r\n-            expect(res.body[1].sum).toBe('200.00');\r\n+            expect(res.body[1].sum).toBe('50.00');\r\n         });\r\n       });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1664818356502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,11 +225,11 @@\n             console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n-            expect(res.body[0].sum).toBe('150.00');\r\n+            expect(res.body[0].sum).toBe('-100.00');\r\n             expect(res.body[1].id).toBe(10101);\r\n-            expect(res.body[1].sum).toBe('50.00');\r\n+            expect(res.body[1].sum).toBe('300.00');\r\n         });\r\n       });\r\n   });\r\n \r\n"
                },
                {
                    "date": 1664822091104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,30 +207,29 @@\n         });\r\n       });\r\n   });\r\n   \r\n-  test('Should consider transfers', () => {\r\n-    return request(app).post(ROUTE_TRANSFER)\r\n+  test('Should consider transfers', async () => {\r\n+    const result = await request(app).post(ROUTE_TRANSFER)\r\n       .send({\r\n         description: 'Should consider transfers',\r\n         date: new Date(),\r\n         ammount: 250,\r\n         acc_ori_id: 10100,\r\n         acc_des_id: 10101\r\n       })\r\n-      .set('authorization', `bearer ${TOKEN}`)\r\n-      .then(() => {\r\n-        return request(app).get(MAIN_ROUTE)\r\n-          .set('authorization', `bearer ${TOKEN}`)\r\n-          .then(res => {\r\n-            console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n-            expect(res.status).toBe(200);\r\n-            expect(res.body).toHaveLength(2);\r\n-            expect(res.body[0].id).toBe(10100);\r\n-            expect(res.body[0].sum).toBe('-100.00');\r\n-            expect(res.body[1].id).toBe(10101);\r\n-            expect(res.body[1].sum).toBe('300.00');\r\n-        });\r\n+      .set('authorization', `bearer ${TOKEN}`);\r\n+\r\n+      return request(app).get(MAIN_ROUTE)\r\n+        .set('authorization', `bearer ${TOKEN}`)\r\n+        .then(res => {\r\n+          console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n+          expect(res.status).toBe(200);\r\n+          expect(res.body).toHaveLength(2);\r\n+          expect(res.body[0].id).toBe(10100);\r\n+          expect(res.body[0].sum).toBe('-100.00');\r\n+          expect(res.body[1].id).toBe(10101);\r\n+          expect(res.body[1].sum).toBe('300.00');\r\n       });\r\n   });\r\n \r\n   test('should calculate the balance of the accounts of users', () => {\r\n"
                },
                {
                    "date": 1664822542369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,19 +218,19 @@\n         acc_des_id: 10101\r\n       })\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n-      return request(app).get(MAIN_ROUTE)\r\n-        .set('authorization', `bearer ${TOKEN}`)\r\n-        .then(res => {\r\n-          console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n-          expect(res.status).toBe(200);\r\n-          expect(res.body).toHaveLength(2);\r\n-          expect(res.body[0].id).toBe(10100);\r\n-          expect(res.body[0].sum).toBe('-100.00');\r\n-          expect(res.body[1].id).toBe(10101);\r\n-          expect(res.body[1].sum).toBe('300.00');\r\n-      });\r\n+      const res = await request(app).get(MAIN_ROUTE)\r\n+        .set('authorization', `bearer ${TOKEN}`);\r\n+\r\n+      console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n+      \r\n+      expect(res.status).toBe(200);\r\n+      expect(res.body).toHaveLength(2);\r\n+      expect(res.body[0].id).toBe(10100);\r\n+      expect(res.body[0].sum).toBe('-100.00');\r\n+      expect(res.body[1].id).toBe(10101);\r\n+      expect(res.body[1].sum).toBe('300.00');\r\n   });\r\n \r\n   test('should calculate the balance of the accounts of users', () => {\r\n     return request(app).get(MAIN_ROUTE)\r\n"
                },
                {
                    "date": 1664824483743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n       const res = await request(app).get(MAIN_ROUTE)\r\n         .set('authorization', `bearer ${TOKEN}`);\r\n \r\n       console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n-      \r\n+\r\n       expect(res.status).toBe(200);\r\n       expect(res.body).toHaveLength(2);\r\n       expect(res.body[0].id).toBe(10100);\r\n       expect(res.body[0].sum).toBe('-100.00');\r\n"
                },
                {
                    "date": 1664825566728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,10 @@\n         acc_des_id: 10101\r\n       })\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n+      console.log('i', result);\r\n+\r\n       const res = await request(app).get(MAIN_ROUTE)\r\n         .set('authorization', `bearer ${TOKEN}`);\r\n \r\n       console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n"
                },
                {
                    "date": 1664826385063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,9 +214,10 @@\n         description: 'Should consider transfers',\r\n         date: new Date(),\r\n         ammount: 250,\r\n         acc_ori_id: 10100,\r\n-        acc_des_id: 10101\r\n+        acc_des_id: 10101,\r\n+        user_id: 10100\r\n       })\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n       console.log('i', result);\r\n"
                },
                {
                    "date": 1664826724584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,10 +219,8 @@\n         user_id: 10100\r\n       })\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n-      console.log('i', result);\r\n-\r\n       const res = await request(app).get(MAIN_ROUTE)\r\n         .set('authorization', `bearer ${TOKEN}`);\r\n \r\n       console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n"
                },
                {
                    "date": 1664826973640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('subtract', res.body[0].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(1);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n@@ -95,9 +94,8 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('consider', res.body[0].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(1);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n@@ -119,9 +117,8 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n@@ -145,9 +142,8 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('not mix balances', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('-100.00');\r\n@@ -171,10 +167,8 @@\n \r\n     const res = await request(app).get(MAIN_ROUTE)\r\n       .set('authorization', `bearer ${TOKEN}`);\r\n \r\n-    console.log('Should consider old transaction', res.body[0].sum, res.body[1].sum);\r\n-\r\n     expect(res.status).toBe(200);\r\n     expect(res.body).toHaveLength(2);\r\n     expect(res.body[0].id).toBe(10100);\r\n     expect(res.body[0].sum).toBe('150.00');\r\n@@ -196,9 +190,8 @@\n       .then(() => {\r\n         return request(app).get(MAIN_ROUTE)\r\n           .set('authorization', `bearer ${TOKEN}`)\r\n           .then(res => {\r\n-            console.log('Should not consider future transaction', res.body[0].sum, res.body[1].sum);\r\n             expect(res.status).toBe(200);\r\n             expect(res.body).toHaveLength(2);\r\n             expect(res.body[0].id).toBe(10100);\r\n             expect(res.body[0].sum).toBe('150.00');\r\n@@ -222,10 +215,8 @@\n \r\n       const res = await request(app).get(MAIN_ROUTE)\r\n         .set('authorization', `bearer ${TOKEN}`);\r\n \r\n-      console.log('Should consider transfers', res.body[0].sum, res.body[1].sum);\r\n-\r\n       expect(res.status).toBe(200);\r\n       expect(res.body).toHaveLength(2);\r\n       expect(res.body[0].id).toBe(10100);\r\n       expect(res.body[0].sum).toBe('-100.00');\r\n"
                }
            ],
            "date": 1664803635123,
            "name": "Commit-0",
            "content": "const request = require('supertest');\r\nconst moment = require('moment');\r\nconst app = require('../../src/app');\r\nconst jwt = require('jwt-simple');\r\n\r\nconst MAIN_ROUTE = '/v1/balance';\r\nconst ROUTE_TRANSACTION = '/v1/transactions';\r\nconst ROUTE_TRANSFER = '/v1/transfers';\r\nconst logUser = {\r\n  id: 10100,\r\n  name: 'User #3',\r\n  mail: 'user3@mail.com'\r\n};\r\nconst TOKEN = jwt.encode(logUser, 'Segredo!');\r\n\r\nbeforeAll(async () => {\r\n  await app.db.seed.run();\r\n});\r\n\r\ndescribe('When calculate a user balance...', () => {\r\n  \r\n  test('It should return only accounts with some transaction', () => {\r\n    return request(app).get(MAIN_ROUTE)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .then(res => {\r\n        expect(res.status).toBe(200);\r\n        expect(res.body).toHaveLength(0);\r\n    });\r\n  });\r\n  \r\n  test('Should add values of input', async () => {\r\n    await request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 100,\r\n        type: 'I',\r\n        acc_id: 10100,\r\n        status: true\r\n      });\r\n    \r\n    const res = await request(app).get(MAIN_ROUTE)\r\n      .set('authorization', `bearer ${TOKEN}`);\r\n\r\n    expect(res.status).toBe(200);\r\n    expect(res.body).toHaveLength(1);\r\n    expect(res.body[0].id).toBe(10100);\r\n    expect(res.body[0].sum).toBe('100.00');\r\n  });\r\n  \r\n  test('Should subtract output values', () => {\r\n    return request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 200,\r\n        type: 'O',\r\n        acc_id: 10100,\r\n        status: true\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(1);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('-100.00');\r\n        });\r\n      });\r\n  });\r\n\r\n  test('Should not consider pending transactions', () => {\r\n    return request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 200,\r\n        type: 'O',\r\n        acc_id: 10100,\r\n        status: false\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(1);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('-100.00');\r\n        });\r\n      });\r\n  });\r\n  \r\n  test('Should not mix balances from different accounts', () => {\r\n    return request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 50,\r\n        type: 'I',\r\n        acc_id: 10101,\r\n        status: true\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(2);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('-100.00');\r\n            expect(res.body[1].id).toBe(10101);\r\n            expect(res.body[1].sum).toBe('50.00');\r\n        });\r\n      });\r\n  });\r\n  \r\n  test('Should not mix accounts from another users', () => {\r\n    return request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 200,\r\n        type: 'O',\r\n        acc_id: 10102,\r\n        status: true\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(2);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('-100.00');\r\n            expect(res.body[1].id).toBe(10101);\r\n            expect(res.body[1].sum).toBe('50.00');\r\n        });\r\n      });\r\n  });\r\n  \r\n  test('Should consider old transaction', async () => {\r\n    await request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: moment().subtract({days: 5}),\r\n        ammount: 250,\r\n        type: 'I',\r\n        acc_id: 10100,\r\n        status: true\r\n      });\r\n    const res = await request(app).get(MAIN_ROUTE)\r\n      .set('authorization', `bearer ${TOKEN}`);\r\n    expect(res.status).toBe(200);\r\n    expect(res.body).toHaveLength(2);\r\n    expect(res.body[0].id).toBe(10100);\r\n    expect(res.body[0].sum).toBe('150.00');\r\n    expect(res.body[1].id).toBe(10101);\r\n    expect(res.body[1].sum).toBe('50.00');      \r\n  });\r\n  \r\n  test('Should not consider future transaction', () => {\r\n    return request(app).post(ROUTE_TRANSACTION)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: moment().add({days: 5}),\r\n        ammount: 250,\r\n        type: 'I',\r\n        acc_id: 10100,\r\n        status: true\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(2);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('150.00');\r\n            expect(res.body[1].id).toBe(10101);\r\n            expect(res.body[1].sum).toBe('50.00');\r\n        });\r\n      });\r\n  });\r\n  \r\n  test('Should consider transfers', () => {\r\n    return request(app).post(ROUTE_TRANSFER)\r\n      .set('authorization', `bearer ${TOKEN}`)\r\n      .send({\r\n        description: '1',\r\n        date: new Date(),\r\n        ammount: 250,\r\n        acc_ori_id: 10100,\r\n        acc_des_id: 10101\r\n      })\r\n      .then(() => {\r\n        return request(app).get(MAIN_ROUTE)\r\n          .set('authorization', `bearer ${TOKEN}`)\r\n          .then(res => {\r\n            expect(res.status).toBe(200);\r\n            expect(res.body).toHaveLength(2);\r\n            expect(res.body[0].id).toBe(10100);\r\n            expect(res.body[0].sum).toBe('-100.00');\r\n            expect(res.body[1].id).toBe(10101);\r\n            expect(res.body[1].sum).toBe('200.00');\r\n        });\r\n      });\r\n  });\r\n\r\n})"
        }
    ]
}